//map colors

@mixin bg-colors($map){
  @each $theme, $color in $map {
    .btn--#{$theme} {
      background-color: $color;
    }
  }
}

@mixin grid-colors($map){
  @each $theme, $color in $map {
    &__#{$theme} {
      background-color: $color;

    }
  }
}


//flexbox mixin

@mixin flex(
$disp: flex,
$dir: null,
$wrap: null,
$just: null){
  display: $disp;
  flex-direction: $dir;
  flex-wrap: $wrap;
  justify-content: $just;
}

//media queries

  @mixin mq($break){
    @if $break=="medium"{
    @media(min-width: $breakpoint-md) {
      @content;
    }
  }

@else if $break=="large"{
  @media(min-width: $breakpoint-lg) {
    @content;
  }
}

@else {
  @error "No value for '#{$break}'."
 }
}

@mixin grid-columns{
@for $i from 3 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));
    .grid__col--#{$i} {
      width: percentage( $target / $context );
    }
  }
}
